{"version":3,"sources":["controllers/Vocabulary.js","views/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["vocabulary","Quiz","props","getRandomQuestion","index","Math","floor","random","length","handleInput","event","v","target","value","setState","state","userInput","handleInputKey","isCorrect","key","undefined","validate","nextQuestion","question","nCorrect","normalize","de","repeat","nthQuestion","nQuestions","german","replace","trim","this","en","placeholder","onChange","disabled","onKeyDown","onClick","React","Component","App","className","basename","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9725ee66.chunk.js","sourcesContent":["export const vocabulary = [\n    //Colors\n    { 'de': 'rot', 'en': 'red' },\n    { 'de': 'rosa', 'en': 'pink' },\n    { 'de': 'blau', 'en': 'blue' },\n    { 'de': 'grün', 'en': 'green' },\n    { 'de': 'gelb', 'en': 'yellow' },\n    { 'de': 'orange', 'en': 'orange' },\n    { 'de': 'braun', 'en': 'brown' },\n    { 'de': 'weiß', 'en': 'white' },\n    { 'de': 'schwarz', 'en': 'black' },\n    { 'de': 'grau', 'en': 'gray' },\n    { 'de': 'silber', 'en': 'silver' },\n\n    //Weekdays\n    { 'de': 'Montag', 'en': 'Monday' },\n    { 'de': 'Dienstag', 'en': 'Tuesday' },\n    { 'de': 'Mittwoch', 'en': 'Wednesday' },\n    { 'de': 'Donnerstag', 'en': 'Thursday' },\n    { 'de': 'Freitag', 'en': 'Friday' },\n    { 'de': 'Samstag', 'en': 'Saturday' },\n    { 'de': 'Sonntag', 'en': 'Sunday' },\n\n    //Fruit\n    { 'de_art': 'der', 'de': 'Apfel', 'en': 'apple', 'de_plu': 'die Äpfel' },\n    { 'de_art': 'die', 'de': 'Ananas', 'en': 'pineapple', 'de_plu': 'die Ananasse' },\n    { 'de_art': 'die', 'de': 'Banane', 'en': 'banana', 'de_plu': 'die Bananen' },\n    { 'de_art': 'die', 'de': 'Birne', 'en': 'pear', 'de_plu': 'die Birnen' },\n    { 'de_art': 'die', 'de': 'Erdbeere', 'en': 'strawberry', 'de_plu': 'die Erdbeeren' },\n    { 'de_art': 'die', 'de': 'Kirsche', 'en': 'cherry', 'de_plu': 'die Kirschen' },\n    { 'de_art': 'die', 'de': 'Melone', 'en': 'melon', 'de_plu': 'die Melonen' },\n    { 'de_art': 'die', 'de': 'Orange', 'en': 'orange', 'de_plu': 'die Orangen' },\n    { 'de_art': 'der', 'de': 'Pfirsich', 'en': 'peach', 'de_plu': 'die Pfirsiche' },\n    //Family\n    { 'de_art': 'die', 'de': 'Eltern', 'en': 'parents', 'de_plu': '' },\n    { 'de_art': 'die', 'de': 'Mutter', 'en': 'mother', 'de_plu': 'die Mütter' },\n    { 'de_art': 'der', 'de': 'Vater', 'en': 'father', 'de_plu': 'die Väter' },\n    { 'de_art': 'die', 'de': 'Geschwister', 'en': 'siblings', 'de_plu': '' },\n    { 'de_art': 'die', 'de': 'Schwester', 'en': 'sister', 'de_plu': 'die Schwestern' },\n    { 'de_art': 'der', 'de': 'Bruder', 'en': 'brother', 'de_plu': 'die Brüder' },\n\n    //Verbs\n    { 'de_art': '', 'de': 'antworten', 'en': 'to answer', 'de_plu': '' },\n    { 'de_art': '', 'de': 'arbeiten', 'en': 'to work', 'de_plu': '' },\n    { 'de_art': '', 'de': 'bedeuten', 'en': 'to mean, signify', 'de_plu': '' },\n    { 'de_art': '', 'de': 'beginnen', 'en': 'to begin', 'de_plu': '' },\n    { 'de_art': '', 'de': 'bekommen', 'en': 'to get, receive', 'de_plu': '' },\n    { 'de_art': '', 'de': 'bestellen', 'en': 'to order', 'de_plu': '' },\n    { 'de_art': '', 'de': 'besuchen', 'en': 'to visit', 'de_plu': '' },\n    { 'de_art': '', 'de': 'bezahlen', 'en': 'to pay', 'de_plu': '' },\n    { 'de_art': '', 'de': 'bleiben', 'en': 'to stay, remain', 'de_plu': '' },\n    { 'de_art': '', 'de': 'bringen', 'en': 'to bring, take', 'de_plu': '' },\n    { 'de_art': '', 'de': 'danken', 'en': 'to thank', 'de_plu': '' },\n    { 'de_art': '', 'de': 'denken', 'en': 'to think', 'de_plu': '' },\n    { 'de_art': '', 'de': 'essen', 'en': 'to eat', 'de_plu': '' },\n    { 'de_art': '', 'de': 'fahren', 'en': 'to travel, drive, go', 'de_plu': '' },\n    { 'de_art': '', 'de': 'finden', 'en': 'to find', 'de_plu': '' },\n    { 'de_art': '', 'de': 'fliegen', 'en': 'to fly', 'de_plu': '' },\n    { 'de_art': '', 'de': 'fragen', 'en': 'to ask', 'de_plu': '' },\n    { 'de_art': '', 'de': 'geben', 'en': 'to give', 'de_plu': '' },\n    { 'de_art': '', 'de': 'gehen', 'en': 'to go', 'de_plu': '' },\n    { 'de_art': '', 'de': 'helgfen', 'en': 'to help', 'de_plu': '' },\n    { 'de_art': '', 'de': 'trinken', 'en': 'to hear, listen', 'de_plu': '' },\n    { 'de_art': '', 'de': 'kaufen', 'en': 'to buy', 'de_plu': '' },\n    { 'de_art': '', 'de': 'kommen', 'en': 'to come', 'de_plu': '' },\n    { 'de_art': '', 'de': 'kosten', 'en': 'to cost', 'de_plu': '' },\n    { 'de_art': '', 'de': 'lesen', 'en': 'to read', 'de_plu': '' },\n    { 'de_art': '', 'de': 'lieben', 'en': 'to love', 'de_plu': '' },\n    { 'de_art': '', 'de': 'machen', 'en': 'to make, do', 'de_plu': '' },\n    { 'de_art': '', 'de': 'nehmen', 'en': 'to take', 'de_plu': '' },\n    { 'de_art': '', 'de': 'öffnen', 'en': 'to open', 'de_plu': '' },\n    { 'de_art': '', 'de': 'probieren', 'en': 'to try (out)', 'de_plu': '' },\n    { 'de_art': '', 'de': 'regnen', 'en': 'to rain', 'de_plu': '' },\n    { 'de_art': '', 'de': 'reisen', 'en': 'to travel', 'de_plu': '' },\n    { 'de_art': '', 'de': 'sagen', 'en': 'to say, tell', 'de_plu': '' },\n    { 'de_art': '', 'de': 'schlafen', 'en': 'to sleep', 'de_plu': '' },\n    { 'de_art': '', 'de': 'schmecken', 'en': 'to taste, be tasty', 'de_plu': '' },\n    { 'de_art': '', 'de': 'schreiben', 'en': 'to write', 'de_plu': '' },\n    { 'de_art': '', 'de': 'schwimmen', 'en': 'to swim', 'de_plu': '' },\n    { 'de_art': '', 'de': 'sehen', 'en': 'to see', 'de_plu': '' },\n    { 'de_art': '', 'de': 'senden', 'en': 'to send, transmit', 'de_plu': '' },\n    { 'de_art': '', 'de': 'setzen', 'en': 'to put, set', 'de_plu': '' },\n    { 'de_art': '', 'de': 'singen', 'en': 'to sing', 'de_plu': '' },\n    { 'de_art': '', 'de': 'spielen', 'en': 'to play, act', 'de_plu': '' },\n    { 'de_art': '', 'de': 'sprechen', 'en': 'to speak', 'de_plu': '' },\n    { 'de_art': '', 'de': 'suchen', 'en': 'to seek, search look for', 'de_plu': '' },\n    { 'de_art': '', 'de': 'trinken', 'en': 'to drink', 'de_plu': '' },\n    { 'de_art': '', 'de': 'vergessen', 'en': 'to forget', 'de_plu': '' },\n    { 'de_art': '', 'de': 'verstehen', 'en': 'to understand', 'de_plu': '' },\n    { 'de_art': '', 'de': 'warten', 'en': 'to wait', 'de_plu': '' },\n    { 'de_art': '', 'de': 'wohnen', 'en': 'to reside, live (in)', 'de_plu': '' },\n    { 'de_art': '', 'de': 'zeigen', 'en': 'to show, indicate', 'de_plu': '' },\n]","import React from 'react';\n\nimport { vocabulary } from '../controllers/Vocabulary';\n\nexport class Quiz extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nQuestions: 10,\n            nthQuestion: 1,\n            nCorrect: 0,\n            question: this.getRandomQuestion(),\n            userInput: \"\",\n            isCorrect: undefined\n        };\n    }\n\n    getRandomQuestion = () => {\n        const index = Math.floor(Math.random() * vocabulary.length);\n        return vocabulary[index];\n    }\n\n    handleInput = (event) => {\n        const v = event.target.value;\n        this.setState({\n            ...this.state,\n            userInput: v\n        });\n    }\n\n    handleInputKey = (event) => {\n        const { isCorrect } = this.state;\n        if (event.key === 'Enter') {\n            if (isCorrect === undefined) {\n                this.validate();\n            } else {\n                this.nextQuestion(!isCorrect);\n            }\n        }\n    }\n\n    normalize(german) {\n        return german.replace('ß', 'ss').trim();\n    }\n\n    validate = () => {\n        const { userInput, question, nCorrect } = this.state;\n        if (this.normalize(userInput) === this.normalize(question.de)) {\n            this.setState({\n                isCorrect: true,\n                nCorrect: nCorrect + 1\n            });\n        }\n        else {\n            this.setState({\n                isCorrect: false\n            });\n        }\n    }\n\n    nextQuestion = (repeat) => {\n        const { question } = this.state;\n        this.setState({\n            nthQuestion: this.state.nthQuestion + 1,\n            question: repeat === true ? question : this.getRandomQuestion(),\n            userInput: \"\",\n            isCorrect: undefined\n        });\n    }\n\n    render() {\n        const { nCorrect, userInput, nQuestions, nthQuestion, question, isCorrect } = this.state;\n        return <div>\n            Quiz: {nthQuestion}/{nQuestions} - {nCorrect} correct\n            <br />\n            {question && <div>\n                {question.en}\n                <br />\n                <input value={userInput} placeholder=\"In german is...\" onChange={this.handleInput} disabled={isCorrect} onKeyDown={this.handleInputKey} />\n                {isCorrect === undefined &&\n                    <button onClick={this.validate}>Validate</button>\n                }\n            </div>}\n            {isCorrect === true && <div>\n                <h1>Correct!</h1>\n                <button onClick={() => this.nextQuestion(false)}>Next</button>\n            </div>}\n            {isCorrect === false && <div>\n                <h1>Incorrect!</h1>\n                <h2>{question.en} -> {question.de}</h2>\n                <br />\n                <button onClick={() => this.nextQuestion(true)}>Next</button>\n            </div>}\n        </div>;\n    }\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport { Quiz } from './views/Quiz';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Router basename=\"/learn-german\">\n        <Link to=\"/quiz\">Quiz</Link>\n        <Switch>\n          <Route path=\"/quiz\">\n            <Quiz />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}