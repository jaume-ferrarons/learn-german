{"version":3,"sources":["controllers/Vocabulary.js","views/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["vocabulary","Quiz","props","getRandomQuestion","index","Math","floor","random","length","console","log","w","handleInput","event","v","target","value","received","setState","state","userInput","handleInputKey","key","validate","question","nCorrect","normalize","de","isCorrect","nextQuestion","nthQuestion","undefined","nQuestions","german","replace","trim","this","en","placeholder","onChange","disabled","onKeyDown","onClick","React","Component","App","className","basename","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6ad93722.chunk.js","sourcesContent":["export const vocabulary = [\n    //Colors\n    { 'de': 'rot', 'en': 'red' },\n    { 'de': 'rosa', 'en': 'pink' },\n    { 'de': 'blau', 'en': 'blue' },\n    { 'de': 'grün', 'en': 'green' },\n    { 'de': 'gelb', 'en': 'yellow' },\n    { 'de': 'orange', 'en': 'orange' },\n    { 'de': 'braun', 'en': 'brown' },\n    { 'de': 'weiß', 'en': 'white' },\n    { 'de': 'schwarz', 'en': 'black' },\n    { 'de': 'grau', 'en': 'gray' },\n    { 'de': 'silber', 'en': 'silver' },\n\n    //Weekdays\n    { 'de': 'Montag', 'en': 'Monday' },\n    { 'de': 'Dienstag', 'en': 'Tuesday' },\n    { 'de': 'Mittwoch', 'en': 'Wednesday' },\n    { 'de': 'Donnerstag', 'en': 'Thursday' },\n    { 'de': 'Freitag', 'en': 'Friday' },\n    { 'de': 'Samstag', 'en': 'Saturday' },\n    { 'de': 'Sonntag', 'en': 'Sunday' },\n\n    //Fruit\n    { 'de_art': 'der', 'de': 'Apfel', 'en': 'apple', 'de_plu': 'die Äpfel' },\n    { 'de_art': 'die', 'de': 'Ananas', 'en': 'pineapple', 'de_plu': 'die Ananasse' },\n    { 'de_art': 'die', 'de': 'Banane', 'en': 'banana', 'de_plu': 'die Bananen' },\n    { 'de_art': 'die', 'de': 'Birne', 'en': 'pear', 'de_plu': 'die Birnen' },\n    { 'de_art': 'die', 'de': 'Erdbeere', 'en': 'strawberry', 'de_plu': 'die Erdbeeren' },\n    { 'de_art': 'die', 'de': 'Kirsche', 'en': 'cherry', 'de_plu': 'die Kirschen' },\n    { 'de_art': 'die', 'de': 'Melone', 'en': 'melon', 'de_plu': 'die Melonen' },\n    { 'de_art': 'die', 'de': 'Orange', 'en': 'orange', 'de_plu': 'die Orangen' },\n    { 'de_art': 'der', 'de': 'Pfirsich', 'en': 'peach', 'de_plu': 'die Pfirsiche' },\n    { 'de_art': 'die', 'de': 'Wassermelone', 'en': 'watermelon', 'de_plu': 'die Wassermelonen' },\n    { 'de_art': 'die', 'de': 'Weintraube', 'en': 'grape', 'de_plu': 'die Weintrauben' },\n    { 'de_art': 'die', 'de': 'Zitrone', 'en': 'lemon', 'de_plu': 'die Zitronen' },\n    //Family\n    { 'de_art': 'die', 'de': 'Eltern', 'en': 'parents', 'de_plu': '' },\n    { 'de_art': 'die', 'de': 'Mutter', 'en': 'mother', 'de_plu': 'die Mütter' },\n    { 'de_art': 'der', 'de': 'Vater', 'en': 'father', 'de_plu': 'die Väter' },\n    { 'de_art': 'die', 'de': 'Geschwister', 'en': 'siblings', 'de_plu': '' },\n    { 'de_art': 'die', 'de': 'Schwester', 'en': 'sister', 'de_plu': 'die Schwestern' },\n    { 'de_art': 'der', 'de': 'Bruder', 'en': 'brother', 'de_plu': 'die Brüder' },\n    { 'de_art': 'die', 'de': 'Mama', 'en': 'mother (informal)', 'de_plu': 'die Mamas' },\n    { 'de_art': 'die', 'de': 'Mami', 'en': 'mother (informal)', 'de_plu': 'die Mamis' },\n    { 'de_art': 'die', 'de': 'Mutti', 'en': 'mother (informal)', 'de_plu': 'die Muttis' },\n    { 'de_art': 'der', 'de': 'Papa', 'en': 'father (informal)', 'de_plu': 'die Papas' },\n    { 'de_art': 'der', 'de': 'Papi', 'en': 'father (informal)', 'de_plu': 'die Papis' },\n    { 'de_art': 'der', 'de': 'Vati', 'en': 'father (informal)', 'de_plu': 'die Vatis' },\n    //Weather\n    { 'de_art': 'das', 'de': 'das Gewitter', 'en': 'storm', 'de_plu': '' },\n    { 'de_art': 'die', 'de': 'Graupeln (Plural) ', 'en': 'ice pellets', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Hagel', 'en': 'hail', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Himmel', 'en': 'sky', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Nebel', 'en': 'fog', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Regen', 'en': 'rain', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Regenbogen', 'en': 'rainbow', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Schnee', 'en': 'snow', 'de_plu': '' },\n    { 'de_art': 'die', 'de': 'Sonne', 'en': 'sun', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Sturm', 'en': 'storm', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Tau', 'en': 'dew', 'de_plu': '' },\n    { 'de_art': 'der', 'de': 'Wind', 'en': 'wind', 'de_plu': '' },\n    { 'de_art': 'die', 'de': 'Wolke', 'en': 'cloud', 'de_plu': '' },\n    //Parts of the house\n    { 'de_art': 'das', 'de': 'Bad ', 'en': 'bathroom', 'de_plu': 'die Bäder' },\n    { 'de_art': 'der', 'de': 'Balkon ', 'en': 'balcony', 'de_plu': 'die Balkone' },\n    { 'de_art': 'die', 'de': 'Bibliothek ', 'en': 'library', 'de_plu': 'die Bibliotheken' },\n    { 'de_art': 'die', 'de': 'Eingangshalle ', 'en': 'entry way', 'de_plu': 'die Eingangshallen' },\n    { 'de_art': 'der', 'de': 'Flur ', 'en': 'hall', 'de_plu': 'die Flure' },\n    { 'de_art': 'der', 'de': 'Garten ', 'en': 'garden', 'de_plu': 'die Gärten' },\n    { 'de_art': 'das', 'de': 'Gästezimmer ', 'en': 'guest room', 'de_plu': 'die Gästezimmer' },\n    { 'de_art': 'der', 'de': 'Keller ', 'en': 'basement', 'de_plu': 'die Keller' },\n    { 'de_art': 'das', 'de': 'Kinderzimmer ', 'en': 'kid’s room', 'de_plu': 'die Kinderzimmer' },\n    { 'de_art': 'die', 'de': 'Küche ', 'en': 'kitchen', 'de_plu': 'die Küchen' },\n    { 'de_art': 'das', 'de': 'Esszimmer', 'en': 'dining room', 'de_plu': 'die Esszimmer' },\n    { 'de_art': 'die', 'de': 'Toilette ', 'en': 'toilet', 'de_plu': 'die Toiletten' },\n    { 'de_art': 'der', 'de': 'Weinkeller ', 'en': 'wine cellar', 'de_plu': 'die Weinkeller' },\n    { 'de_art': 'das', 'de': 'Wohnzimmer ', 'en': 'living room', 'de_plu': 'die Wohnzimmer' },\n    { 'de_art': 'das', 'de': 'Schlafzimmer', 'en': 'bedroom', 'de_plu': 'die Schlafzimmer' },\n\n]","import React from 'react';\n\nimport { vocabulary } from '../controllers/Vocabulary';\n\nexport class Quiz extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nQuestions: 10,\n            nthQuestion: 1,\n            nCorrect: 0,\n            question: this.getRandomQuestion(),\n            userInput: \"\",\n            isCorrect: undefined\n        };\n    }\n\n    getRandomQuestion = () => {\n        const index = Math.floor(Math.random() * vocabulary.length);\n        console.log({ index, w: vocabulary[index] });\n        return vocabulary[index];\n    }\n\n    handleInput = (event) => {\n        const v = event.target.value;\n        console.log({ received: v })\n        this.setState({\n            ...this.state,\n            userInput: v\n        }, console.log(this.state))\n    }\n\n    handleInputKey = (event) => {\n        if (event.key === 'Enter') {\n            this.validate();\n        }\n    }\n\n    normalize(german) {\n        return german.replace('ß', 'ss').trim();\n    }\n\n    validate = () => {\n        const { userInput, question, nCorrect } = this.state;\n        if (this.normalize(userInput) === this.normalize(question.de)) {\n            this.setState({\n                isCorrect: true,\n                nCorrect: nCorrect + 1\n            });\n        }\n        else {\n            this.setState({\n                isCorrect: false\n            });\n        }\n    }\n\n    nextQuestion = () => {\n        this.setState({\n            nthQuestion: this.state.nthQuestion + 1,\n            question: this.getRandomQuestion(),\n            userInput: \"\",\n            isCorrect: undefined\n        });\n    }\n\n    render() {\n        const { nCorrect, userInput, nQuestions, nthQuestion, question, isCorrect } = this.state;\n        console.log({ question, userInput });\n        return <div>\n            Quiz: {nthQuestion}/{nQuestions} - {nCorrect} correct\n            <br />\n            {question && <div>\n                {question.en}\n                <br />\n                <input value={userInput} placeholder=\"In german is...\" onChange={this.handleInput} disabled={isCorrect} onKeyDown={this.handleInputKey} />\n                {isCorrect === undefined &&\n                    <button onClick={this.validate}>Validate</button>\n                }\n            </div>}\n            {isCorrect === true && <div>\n                <h1>Correct!</h1>\n                <button onClick={this.nextQuestion}>Next</button>\n            </div>}\n            {isCorrect === false && <div>\n                <h1>Incorrect!</h1>\n                <h2>{question.en} -> {question.de}</h2>\n                <br />\n                <button onClick={this.nextQuestion}>Next</button>\n            </div>}\n        </div>;\n    }\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport { Quiz } from './views/Quiz';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Router basename=\"learn-german\">\n        <Link to=\"/quiz\">Quiz</Link>\n        <Switch>\n          <Route path=\"/quiz\">\n            <Quiz />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}